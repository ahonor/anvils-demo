<joblist>
  <job>
    <context>
      <options preserveOrder='true'>
        <option enforcedvalues='true' name='dir' required='true' values='anvils' />
      </options>
    </context>
    <description>Check the status of anvils</description>
    <dispatch>
      <excludePrecedence>true</excludePrecedence>
      <keepgoing>true</keepgoing>
      <rankOrder>ascending</rankOrder>
      <threadcount>1</threadcount>
    </dispatch>
    <executionEnabled>true</executionEnabled>
    <group>web</group>
    <id>b0661686-0535-417f-bd57-385131cf4dc3</id>
    <loglevel>INFO</loglevel>
    <multipleExecutions>true</multipleExecutions>
    <name>Status</name>
    <nodefilters>
      <filter>tags: www+anvils</filter>
    </nodefilters>
    <nodesSelectedByDefault>true</nodesSelectedByDefault>
    <scheduleEnabled>true</scheduleEnabled>
    <sequence keepgoing='true' strategy='node-first'>
      <command>
        <description>Check pid</description>
        <node-step-plugin type='file-util:contains'>
          <configuration>
            <entry key='file' value='${option.dir}/pid' />
            <entry key='string' value='&apos;^[0-9]*$&apos;' />
          </configuration>
        </node-step-plugin>
      </command>
      <command>
        <errorhandler keepgoingOnSuccess='true'>
          <exec>echo "Continuing..."</exec>
        </errorhandler>
        <script><![CDATA[#!/bin/bash
#/ usage: status.sh ?dir?

set -eu

(( $# != 1 )) && {
	grep '^#/ usage:' <"$0" | cut -c4- >&2
	exit 2	
}
DIR=$1
[[ ! -f $DIR/pid ]] && { echo DOWN; exit 1; }

PID=$(< $DIR/pid)

if [[ -z "${PID:-}" ]]
then
	echo "DOWN"; exit 1;
else 
	echo "RUNNING"
fi	

exit $?]]></script>
        <scriptargs>${option.dir}</scriptargs>
      </command>
    </sequence>
    <uuid>b0661686-0535-417f-bd57-385131cf4dc3</uuid>
  </job>
</joblist>
